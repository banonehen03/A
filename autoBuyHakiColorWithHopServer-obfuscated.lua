-- This file was generated using Luraph Obfuscator v13.4.6

return(function(zl,ri,ii,Nl,si,Qi,Di,Ei,ki,Fi,Ol,yi,oi,Hi,Ci,xi,Pi,Wi,pi,ti,Li,ji,Mi,Oi,Yi,Ri,Xi,Gl,ei,wi,zi,Tl,Zl,mi,dl,Ui,rl,Si,ui,hi,di,Ai,Vi,Ji,ni,li,qi,Ii,Kl,gi,ci,Bi,nl,bi,vi,fi,ai,...)local O,r,d,t=zi[ni],zi[Oi],zi[ri],(di);local Z,N,G=Fi,ei,(ii);local b=(Ji or Li[ji]);local T,z,n=gi,bi,(xi);local i,J=Pi,(li);local L,j,g=Ui,Vi,(ui);local F,e=zi[Ii],Di;local x,P,l,U,V,u,I,D=ai,Bi,Ri,Ri,Ri,Ri,Ri,(Ri);do for CS=0,6 do if not(CS<=2)then if not(CS<=4)then if CS~=5 then D=yi;else end;else do if CS~=3 then else do V=1;end;end;end;end;else if not(CS<=0)then do if CS~=1 then U={};else end;end;else l=(P and P()or Ai);end;end;end;end;local Ti,a,B,R,A,y=4,Ri,Ri,Ri,Ri,Ri;repeat if not(Ti<=2)then if not(Ti<=3)then do if Ti~=4 then y=4294967296;Ti=6;else do Ti=3;end;end;end;else D=F(O(D,5),pi,function(i7)if r(i7,2)==72 then local ql=1;while(Si)do if ql~=0 then a=N(O(i7,1,1));ql=0;else return mi;end;end;else local YU=Ri;for kP=0,1 do if kP~=0 then if not(a)then do return YU;end;else local z3,d3=0,Ri;repeat if z3<=0 then d3=t(YU,a);z3=1;else do if z3==1 then a=Ri;z3=2;else return d3;end;end;end;until(si);end;else YU=d(N(i7,16));end;end;end;end);Ti=1;end;else do if not(Ti<=0)then do if Ti~=1 then A=2147483648;Ti=5;else B=function()local eq,Uq=1,(Ri);while(Si)do do if not(eq<=0)then if eq~=1 then do return Uq;end;else Uq=r(D,V,V);do eq=0;end;end;else V=V+1;eq=2;end;end;end;end;Ti=0;end;end;else R=function()local sV,fV,IV,LV=Ri,Ri,Ri,(Ri);do for p3=0,2 do if not(p3<=0)then if p3~=1 then return LV*16777216+IV*65536+fV*256+sV;else do V=V+4;end;end;else sV,fV,IV,LV=r(D,V,V+3);end;end;end;end;Ti=2;end;end;end;until Ti>5;local S,p=2^52,(y-1);local m=({[0]=1});Ti=1;local s,M=Ri,Ri;do while(Si)do do if Ti<=0 then s=function(Jn,Hn,vn)local cn=Ri;for HF=0,2 do if not(HF<=0)then if HF==1 then cn=cn-cn%1;else do return cn;end;end;else cn=(vn/m[Jn])%m[Hn];end;end;end;Ti=2;else if Ti~=1 then do M=function()local aG,dG,bG=1,Ri,(Ri);while(Si)do if aG<=0 then if not(bG>=A)then else bG=bG-y;end;aG=2;else if aG==1 then do dG,bG=R(),R();end;aG=0;else do return bG*y+dG;end;end;end;end;end;end;break;else do local ZY=(2);for ZP=1,31 do for QT=0,1 do if QT~=0 then ZY=ZY*2;else m[ZP]=ZY;end;end;end;end;Ti=0;end;end;end;end;end;local k=function()local PX=R();local SX=R();local OX=1;local HX,MX,XX,fX=Ri,Ri,Ri,(Ri);while(Si)do do if not(OX<=2)then if not(OX<=4)then if OX~=5 then do if MX==0 then if XX~=0 then MX=1;fX=0;else return HX*0;end;elseif MX==2047 then if XX~=0 then return HX*(1/0);else return HX*(0/0);end;end;end;OX=4;else HX=(-1)^s(31,1,SX);do OX=2;end;end;else if OX~=3 then do return HX*(2^(MX-1023))*(XX/S+fX);end;else fX=1;OX=6;end;end;else do if not(OX<=0)then if OX~=1 then MX=s(20,11,SX);do OX=0;end;else if PX==0 and SX==0 then return 0;end;OX=5;end;else XX=s(0,20,SX)*y+PX;OX=3;end;end;end;end;end;end;local v=({[0]={[0]=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},{[0]=1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14},{[0]=2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13},{[0]=3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12},{[0]=4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11},{[0]=5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10},{[0]=6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9},{[0]=7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8},{[0]=8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7},{[0]=9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6},{[0]=10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5},{[0]=11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4},{[0]=12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3},{[0]=13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2},{[0]=14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1},{[0]=15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0}});local o=((Mi or ki));local H=(o and o[vi]or function(j7,G7)j7=j7%y;local l7,S7,t7=3,Ri,Ri;while(Si)do if l7<=1 then if l7==0 then S7=1;l7=1;else do t7=0;end;l7=2;end;else do if not(l7<=2)then if l7~=3 then return t7+j7*S7+G7*S7;else G7=G7%y;l7=0;end;else while j7>0 and G7>0 do local lz,Xz=Ri,(Ri);for Gj=0,5 do if Gj<=2 then if Gj<=0 then lz=j7%16;else if Gj~=1 then do t7=t7+v[lz][Xz]*S7;end;else Xz=G7%16;end;end;else do if Gj<=3 then j7=(j7-lz)/16;else do if Gj==4 then G7=(G7-Xz)/16;else S7=S7*16;end;end;end;end;end;end;end;do l7=4;end;end;end;end;end;end);local X=(o and o[oi]or function(Cf,df)local Tf=(2);repeat if not(Tf<=0)then if Tf==1 then df=df%y;Tf=0;else Cf=Cf%y;do Tf=1;end;end;else do return((Cf+df)-H(Cf,df))/2;end;end;until(si);end);local f=o and o[Hi]or function(zy,Iy)zy=zy%y;Iy=Iy%y;return p-X(p-zy,p-Iy);end;local w,C,q=o and o[Xi]or function(zM)return p-(zM%y);end,o and o[fi],(o and o[wi]);Ti=6;local E,h,W=Ri,Ri,(Ri);while(Si)do if not(Ti<=3)then if not(Ti<=5)then if Ti~=6 then for J8=1,B()do local F8={};(W)[J8-1]=F8;for Xe=1,B()do local ae=(1);local be,re=Ri,(Ri);do while ae<4 do if not(ae<=1)then if ae==2 then F8[re]=s(0,4,be);ae=3;else(F8)[re+1]=s(4,4,be);do ae=4;end;end;else if ae~=0 then be=B();ae=0;else re=(Xe-1)*2;ae=2;end;end;end;end;end;end;break;else C=C or function(qw,xw)do if not(xw>=32)then else return 0;end;end;for R3=0,1 do do if R3==0 then do if not(xw<0)then else do return q(qw,-xw);end;end;end;else return(qw*m[xw])%y;end;end;end;end;Ti=0;end;else do if Ti~=4 then h=function(kr)local Lr=(R());local Br=(Ri);local hr=2;while hr<=2 do if hr<=0 then do V=V+Lr;end;hr=3;else if hr~=1 then do Br=mi;end;hr=1;else for wv=1,Lr,Ci do local cv,Iv,Pv=0,Ri,(Ri);do repeat if not(cv<=1)then do if cv~=2 then do Pv={r(D,V+wv-1,V+Iv-1)};end;cv=1;else do if not(Iv>Lr)then else Iv=Lr;end;end;cv=3;end;end;else if cv~=0 then for NJ=1,#Pv do local xJ=(1);while xJ~=2 do if xJ~=0 then(Pv)[NJ]=H(Pv[NJ],u);xJ=0;else u=(kr*u+43)%256;do xJ=2;end;end;end;end;break;else Iv=wv+7997-1;cv=2;end;end;until(si);end;Br=Br..d(b(Pv));end;hr=0;end;end;end;return Br;end;Ti=3;else W={};Ti=7;end;end;end;else if not(Ti<=1)then if Ti==2 then I=B();Ti=4;else u=B();Ti=2;end;else if Ti~=0 then E=function(eb)local wb,yb,Kb,vb=2,Ri,Ri,Ri;while(Si)do if not(wb<=0)then do if wb~=1 then yb={r(D,V,V+3)};do wb=0;end;else do vb=H(yb[2],I);end;break;end;end;else do Kb=H(yb[1],I);end;wb=1;end;end;local Xb=H(yb[3],I);local pb=(H(yb[4],I));I=(237*I+eb)%256;do V=V+4;end;return pb*16777216+Xb*65536+vb*256+Kb;end;Ti=5;else q=q or function(UA,eA)if not(eA>=32)then else return 0;end;if not(eA<0)then else return C(UA,-eA);end;local yA=Ri;local hA=1;repeat if hA~=0 then yA=(UA%y/m[eA]);hA=0;else do return yA-yA%1;end;end;until(si);end;do Ti=1;end;end;end;end;end;do Ti=0;end;local c,Y,Q=Ri,Ri,(Ri);do while Ti~=3 do if not(Ti<=0)then if Ti~=1 then Y={};Ti=1;else do Q=1;end;Ti=3;end;else do c=function(...)return Z(qi,...),{...};end;end;Ti=2;end;end;end;do Ti=4;end;local Ki,Zi,Ni,Gi=Ri,Ri,Ri,Ri;while Ti~=6 do if not(Ti<=2)then do if not(Ti<=3)then if Ti==4 then do Ki={};end;Ti=2;else function Ni()local H8,v8=1,(Ri);repeat if H8==0 then v8={Ri,Ri,Ri,Ri,Ri,Ri,{},{},{}};H8=2;else H8=0;end;until H8>1;H8=5;local u8,z8,T8,h8=Ri,Ri,Ri,Ri;repeat if not(H8<=3)then if not(H8<=5)then if H8~=6 then h8=R();H8=2;else v8[6]=B();break;end;else do if H8~=4 then do u8={};end;H8=0;else do v8[13]=B();end;H8=6;end;end;end;else if not(H8<=1)then do if H8==2 then for VZ=1,h8 do v8[9][VZ-1]=Ni();end;do H8=4;end;else(v8)[4]=B();H8=7;end;end;else if H8~=0 then T8=1;H8=3;else z8={};H8=1;end;end;end;until(si);(v8)[17]=B();H8=0;local G8,C8,D8=Ri,Ri,(Ri);while(Si)do if not(H8<=1)then if H8==2 then C8=B();do H8=3;end;else for NY=1,G8 do local KY,eY=Ri,(Ri);local uY=1;do while(Si)do if uY~=0 then do KY={Ri,Ri,Ri,Ri,Ri,Ri,Ri,Ri,Ri,Ri};end;do uY=0;end;else eY=E(C8);do break;end;end;end;end;uY=24;while(Si)do do if not(uY<=12)then if uY<=19 then if not(uY<=15)then if not(uY<=17)then do if uY~=18 then(KY)[2]=s(14,18,eY);uY=10;else KY[11]=s(19,13,eY);uY=0;end;end;else if uY~=16 then(KY)[15]=s(6,9,eY);break;else do(KY)[4]=B();end;uY=17;end;end;else if not(uY<=13)then if uY~=14 then KY[2]=s(14,18,eY);uY=18;else KY[2]=s(14,18,eY);uY=25;end;else(KY)[15]=s(6,9,eY);uY=16;end;end;else if not(uY<=22)then if uY<=24 then do if uY~=23 then KY[11]=s(15,3,eY);do uY=8;end;else do(KY)[7]=s(6,8,eY);end;uY=5;end;end;else if uY~=25 then KY[20]=s(26,11,eY);uY=9;else KY[8]=s(23,9,eY);do uY=23;end;end;end;else if not(uY<=20)then if uY~=21 then(KY)[8]=s(23,9,eY);uY=23;else do KY[4]=B();end;uY=17;end;else do KY[20]=s(26,11,eY);end;do uY=5;end;end;end;end;else if uY<=5 then if not(uY<=2)then if not(uY<=3)then if uY~=4 then KY[9]=s(14,9,eY);uY=16;else(KY)[11]=s(19,13,eY);uY=9;end;else(KY)[11]=s(15,3,eY);do uY=0;end;end;else if uY<=0 then do KY[15]=s(15,1,eY);end;do uY=14;end;else if uY~=1 then KY[8]=s(23,9,eY);uY=1;else KY[11]=s(19,13,eY);uY=0;end;end;end;else if not(uY<=8)then do if uY<=10 then if uY~=9 then do KY[4]=B();end;uY=16;else KY[15]=s(6,9,eY);uY=16;end;else do if uY==11 then do(KY)[11]=s(15,3,eY);end;uY=21;else KY[4]=B();uY=10;end;end;end;end;else if not(uY<=6)then if uY==7 then do KY[2]=s(14,18,eY);end;uY=14;else KY[20]=s(26,11,eY);uY=18;end;else KY[8]=s(23,9,eY);uY=1;end;end;end;end;end;end;do v8[7][NY]=KY;end;end;do H8=1;end;end;else if H8~=0 then do D8=R()-133726;end;do break;end;else G8=R()-133728;H8=2;end;end;end;local n8=B();local Z8=(B()~=0);do for f1=1,D8 do local B1,h1,A1=1,Ri,Ri;do while B1~=2 do if B1~=0 then do B1=0;end;else A1=B();B1=2;end;end;end;B1=3;do while B1<=4 do if not(B1<=1)then if not(B1<=2)then if B1~=3 then if A1==80 then do h1=si;end;elseif A1==117 then do h1=Si;end;elseif A1==161 then h1=O(h(n8),B());elseif A1==111 then h1=k();elseif A1==4 then h1=O(h(n8),R());elseif A1==150 then h1=k()+R();elseif A1==2 then h1=O(h(n8),2);elseif A1==231 then h1=k();elseif A1==190 then h1=R();elseif A1~=121 then else do h1=M();end;end;do B1=0;end;else if A1==80 then h1=si;elseif A1==117 then do h1=Si;end;elseif A1==161 then h1=O(h(n8),B());elseif A1==111 then h1=k();elseif A1==4 then do h1=O(h(n8),R());end;elseif A1==150 then h1=k()+R();elseif A1==2 then h1=O(h(n8),2);elseif A1==231 then h1=k();elseif A1==190 then do h1=R();end;elseif A1~=121 then else h1=M();end;B1=5;end;else if A1==80 then h1=si;elseif A1==117 then do h1=Si;end;elseif A1==161 then h1=O(h(n8),B());elseif A1==111 then h1=k();elseif A1==4 then h1=O(h(n8),R());elseif A1==150 then h1=k()+R();elseif A1==2 then do h1=O(h(n8),2);end;elseif A1==231 then h1=k();elseif A1==190 then h1=R();elseif A1~=121 then else h1=M();end;do B1=3;end;end;else if B1~=0 then if A1==80 then h1=si;elseif A1==117 then h1=Si;elseif A1==161 then h1=O(h(n8),B());elseif A1==111 then do h1=k();end;elseif A1==4 then h1=O(h(n8),R());elseif A1==150 then do h1=k()+R();end;elseif A1==2 then h1=O(h(n8),2);elseif A1==231 then h1=k();elseif A1==190 then h1=R();elseif A1~=121 then else h1=M();end;B1=3;else if A1==80 then h1=si;elseif A1==117 then h1=Si;elseif A1==161 then h1=O(h(n8),B());elseif A1==111 then h1=k();elseif A1==4 then h1=O(h(n8),R());elseif A1==150 then h1=k()+R();elseif A1==2 then h1=O(h(n8),2);elseif A1==dl then h1=k();elseif A1==190 then h1=R();elseif A1~=121 then else h1=M();end;B1=3;end;end;end;end;(u8)[f1-1]=T8;local b1=({h1,{}});do z8[T8]=b1;end;T8=T8+1;if not(Z8)then else do for J1=0,1 do if J1~=0 then Q=Q+1;else(Y)[Q]=b1;end;end;end;end;end;end;local a8=W[v8[4]];do for Sh=1,G8 do local nh=v8[7][Sh];local eh,Qh=a8[nh[4]],(1);local dh=Ri;do repeat if Qh==0 then if not((eh==5 or dh)and nh[8]>255)then else local aZ,FZ,vZ=2,Ri,Ri;repeat if not(aZ<=0)then do if aZ~=1 then(nh)[10]=Si;aZ=1;else FZ=u8[nh[8]-256];aZ=0;end;end;else vZ=z8[FZ];do aZ=3;end;end;until aZ>2;if not(vZ)then else local Kz=(Ri);local vz=2;while vz<=2 do do if not(vz<=0)then if vz~=1 then nh[1]=vZ[1];vz=0;else(Kz)[#Kz+1]={nh,1};vz=3;end;else do Kz=vZ[2];end;vz=1;end;end;end;end;end;Qh=2;else dh=eh==0;Qh=0;end;until Qh>1;end;Qh=2;while Qh<=2 do if not(Qh<=0)then if Qh~=1 then if eh~=2 then else nh[2]=Sh+(nh[2]-131071)+1;end;Qh=0;else if eh~=15 then else local OO,LO=Ri,(Ri);local gO=(1);while(Si)do if gO==0 then LO=z8[OO];do break;end;else OO=u8[nh[2]];gO=0;end;end;if not(LO)then else local B6=0;local W6=(Ri);do while(Si)do do if B6<=0 then do(nh)[5]=LO[1];end;B6=2;else if B6~=1 then W6=LO[2];do B6=1;end;else(W6)[#W6+1]={nh,5};do break;end;end;end;end;end;end;end;end;Qh=3;end;else if not((eh==14 or dh)and nh[9]>255)then else do nh[3]=Si;end;local uv=(u8[nh[9]-256]);local cv=Ri;local gv=(0);do repeat if gv==0 then cv=z8[uv];gv=1;else if not(cv)then else local UG=(Ri);do for rT=0,2 do if not(rT<=0)then do if rT~=1 then UG[#UG+1]={nh,6};else UG=cv[2];end;end;else do(nh)[6]=cv[1];end;end;end;end;end;do gv=2;end;end;until gv==2;end;end;Qh=1;end;end;end;end;local x8=R();do for tT=1,x8 do local NT=(3);local XT,LT,mT=Ri,Ri,Ri;while NT<=3 do do if not(NT<=1)then if NT~=2 then XT=R();NT=1;else mT=R();NT=0;end;else do if NT~=0 then LT=R();NT=2;else for db=XT,LT do do v8[8][db]=mT;end;end;do NT=4;end;end;end;end;end;end;end;end;(v8)[5]=B();local b8=B();v8[1]=s(1,1,b8)~=0;for V_=0,2 do if V_<=0 then v8[3]=s(2,1,b8)~=0;else if V_==1 then(v8)[16]=R();else(v8)[19]=R();end;end;end;v8[2]=B();return v8;end;Ti=3;end;else Gi=Ni();Ti=0;end;end;else if Ti<=0 then Ki[4]=Y;Ti=6;else if Ti~=1 then Ti=1;else function Zi(cY,FY,gY)local KY=cY[1];local pY=(cY[8]);local tY,ZY,nY,yY=cY[7],cY[9],cY[6],cY[5];local YY=(cY[4]);local WY=cY[3];local HY=(J({},{[Ei]=hi}));local lY=(Ri);lY=function(...)local rn,dn,xn=0,1,{};local ln=(P and P()or Ai);local Zn=(ln==l and FY or ln);local Nn,Mn=c(...);Nn=Nn-1;for zK=0,Nn do if nY>zK then do(xn)[zK]=Mn[zK+1];end;else break;end;end;do Ki[1]=cY;end;do Ki[2]=xn;end;if not KY then Mn=Ri;elseif not(WY)then else(xn)[nY]={[Wi]=Nn>=nY and Nn-nY+1 or 0,b(Mn,nY+1,Nn+1)};end;if Zn==ln then else do if not(x)then Ai=Zn;else x(lY,Zn);end;end;end;local qn,yn,zn,an=G(function()do while true do local kL=(tY[dn]);local QL=kL[4];dn=dn+1;do if not(QL<57)then do if not(QL<85)then if not(QL<99)then if QL<106 then if not(QL<102)then if not(QL<104)then if QL==105 then if kL[8]~=70 then do(xn)[kL[7]]=not xn[kL[9]];end;else dn=dn-1;(tY)[dn]={[4]=52,[8]=(kL[9]-181)%256,[7]=(kL[7]-181)%256};end;else do xn[kL[7]]=kL[6]%xn[kL[8]];end;end;else if QL~=103 then do if kL[8]~=84 then repeat local TK,QK=HY,xn;do if not(#TK>0)then else local Bh={};do for Z8,N8 in g,TK do for OD,cD in g,N8 do do if not(cD[1]==QK and cD[2]>=0)then else local Kb=cD[2];if not(not Bh[Kb])then else(Bh)[Kb]={QK[Kb]};end;do(cD)[1]=Bh[Kb];end;do(cD)[2]=1;end;end;end;end;end;end;end;end;until Si;do return;end;else do dn=dn-1;end;do(tY)[dn]={[4]=53,[7]=(kL[7]-79)%256,[9]=(kL[9]-79)%256};end;end;end;else do(xn)[kL[7]]=C(xn[kL[9]],kL[1]);end;end;end;else if not(QL>=100)then local Xf=kL[7];rn=Xf+kL[9]-1;xn[Xf](b(xn,Xf+1,rn));rn=Xf-1;else if QL==101 then if not(xn[kL[9]]<=kL[1])then else do dn=dn+1;end;end;else do xn[kL[7]]={};end;end;end;end;else if not(QL>=110)then do if not(QL<108)then if QL==109 then local bt=kL[7];local rt=((kL[8]-1)*50);for rP=1,rn-bt do xn[bt][rt+rP]=xn[bt+rP];end;else local rK=(kL[7]);local lK=((kL[8]-1)*50);for Sj=1,kL[9]do(xn[rK])[lK+Sj]=xn[rK+Sj];end;end;else if QL~=107 then local mN=xn[kL[9]];if not mN then dn=dn+1;else xn[kL[7]]=mN;end;else do xn[kL[7]]=f(kL[6],xn[kL[8]]);end;end;end;end;else if not(QL<112)then if QL==113 then local DB=kL[7];local TB=DB+3;local uB=(DB+2);local PB=({xn[DB](xn[DB+1],xn[uB])});for JN=1,kL[8]do xn[uB+JN]=PB[JN];end;local ZB=xn[TB];if ZB==Ri then dn=dn+1;else xn[uB]=ZB;end;else xn[kL[7]]=xn[kL[9]]/xn[kL[8]];end;else if QL==111 then(xn)[kL[7]]=Ri;else xn[kL[7]]=H(xn[kL[9]],xn[kL[8]]);end;end;end;end;else do if QL>=92 then if not(QL<95)then do if not(QL>=97)then if QL==96 then local QQ=(kL[7]);xn[QQ](b(xn,QQ+1,rn));rn=QQ-1;else xn[kL[7]]=kL[6]<kL[1];end;else do if QL==98 then(xn)[kL[7]]=xn[kL[9]][xn[kL[8]]];else(xn)[kL[7]]=kL[5];end;end;end;end;else if not(QL<93)then if QL~=94 then xn[kL[7]]=xn[kL[9]]-kL[1];else local Nj=kL[7];(xn[Nj])(xn[Nj+1]);rn=Nj-1;end;else do xn[kL[7]]=X(kL[6],xn[kL[8]]);end;end;end;else if not(QL<88)then if not(QL<90)then if QL==91 then local xj=ZY[kL[2]];local Ej=(Ri);local Dj=xj[2];if not(Dj>0)then else Ej={};for Xp=0,Dj-1 do local Dp=(tY[dn]);local Np=Dp[4];do if Np~=53 then Ej[Xp]=gY[Dp[9]];else Ej[Xp]={xn,Dp[9]};end;end;dn=dn+1;end;(i)(HY,Ej);end;xn[kL[7]]=Zi(xj,Zn,Ej);else local yN=(kL[6]/xn[kL[8]]);do(xn)[kL[7]]=yN-yN%1;end;end;else if QL==89 then(xn)[kL[7]]=X(xn[kL[9]],kL[1]);else(xn)[kL[7]]=w(xn[kL[9]]);end;end;else do if not(QL<86)then if QL~=87 then xn[kL[7]]=#xn[kL[9]];else local lw=gY[kL[9]];(lw[1])[lw[2]]=xn[kL[7]];end;else do if xn[kL[9]]==xn[kL[8]]then else dn=dn+1;end;end;end;end;end;end;end;end;else if not(QL>=71)then if not(QL<64)then if not(QL>=67)then if QL<65 then do xn[kL[7]]=q(kL[6],xn[kL[8]]);end;else if QL==66 then local B_=gY[kL[9]];(xn)[kL[7]]=B_[1][B_[2]];else do if not(not(xn[kL[9]]<=kL[1]))then else dn=dn+1;end;end;end;end;else if QL<69 then do if QL==68 then xn[kL[7]]=Ki[kL[9]];else local iA=kL[9];local TA=(kL[8]);local tA=(kL[7]);if iA==0 then else rn=tA+iA-1;end;local AA,pA=Ri,Ri;if iA~=1 then AA,pA=c(xn[tA](b(xn,tA+1,rn)));else do AA,pA=c(xn[tA]());end;end;if TA==1 then rn=tA-1;else if TA==0 then AA=AA+tA-1;do rn=AA;end;else AA=tA+TA-2;rn=AA+1;end;local PF=(0);for fZ=tA,AA do PF=PF+1;(xn)[fZ]=pA[PF];end;end;end;end;else do if QL~=70 then do(xn)[kL[7]]=Si;end;else(xn)[kL[7]]=kL[6]^xn[kL[8]];end;end;end;end;else if not(QL>=60)then if not(QL>=58)then local BQ,IQ=kL[7],Nn-nY;if not(IQ<0)then else do IQ=-1;end;end;for XD=BQ,BQ+IQ do(xn)[XD]=Mn[nY+(XD-BQ)+1];end;rn=BQ+IQ;else if QL==59 then xn[kL[7]]=f(xn[kL[9]],xn[kL[8]]);else do xn[kL[7]]=H(xn[kL[9]],kL[1]);end;end;end;else if not(QL>=62)then do if QL==61 then(xn)[kL[7]]=xn[kL[9]]%xn[kL[8]];else(xn)[kL[7]]=kL[6]+xn[kL[8]];end;end;else do if QL==63 then if not(xn[kL[9]]<=xn[kL[8]])then dn=dn+1;end;else(xn)[kL[7]]=xn[kL[9]]-xn[kL[8]];end;end;end;end;end;else if not(QL<78)then if not(QL>=81)then do if not(QL<79)then if QL==80 then xn[kL[7]]=C(kL[6],xn[kL[8]]);else local uY=kL[7];(xn[uY])(xn[uY+1],xn[uY+2]);rn=uY-1;end;else xn[kL[7]]=kL[6]~=xn[kL[8]];end;end;else if not(QL<83)then if QL~=84 then do if kL[6]==kL[1]then else dn=dn+1;end;end;else local aY=kL[7];for YP=aY,aY+(kL[9]-1)do do(xn)[YP]=Mn[nY+(YP-aY)+1];end;end;end;else if QL==82 then do rn=kL[7];end;(xn)[rn]=xn[rn]();else repeat local Ph,Kh=HY,xn;if not(#Ph>0)then else local rw=({});for wq,iq in g,Ph do do for Tw,Vw in g,iq do if not(Vw[1]==Kh and Vw[2]>=0)then else local RT=Vw[2];do if not rw[RT]then(rw)[RT]={Kh[RT]};end;end;Vw[1]=rw[RT];do(Vw)[2]=1;end;end;end;end;end;end;until Si;do return si,kL[7],rn;end;end;end;end;else do if not(QL<74)then if not(QL>=76)then if QL==75 then local jC=kL[9];do xn[kL[7]]=xn[jC]..xn[jC+1];end;else xn[kL[7]]=xn[kL[9]]>=xn[kL[8]];end;else if QL==77 then(Zn)[kL[5]]=xn[kL[7]];else do(xn)[kL[7]]=xn[kL[9]]<=xn[kL[8]];end;end;end;else if not(QL<72)then if QL~=73 then(xn)[kL[7]]=xn[kL[9]]<=kL[1];else do(xn)[kL[7]]=q(xn[kL[9]],kL[1]);end;end;else(xn[kL[7]])[xn[kL[9]]]=xn[kL[8]];end;end;end;end;end;end;end;else if not(QL>=28)then if not(QL<14)then if not(QL>=21)then if not(QL>=17)then if not(QL<15)then if QL==16 then xn[kL[7]]=xn[kL[9]]%kL[1];else(xn)[kL[7]]=xn[kL[9]]^kL[1];end;else(xn)[kL[7]]=si;end;else if QL>=19 then do if QL~=20 then(xn)[kL[7]]=kL[6]>xn[kL[8]];else do if xn[kL[9]]==kL[1]then else dn=dn+1;end;end;end;end;else if QL~=18 then do dn=kL[2];end;else xn[kL[7]]=xn[kL[9]]+xn[kL[8]];end;end;end;else do if not(QL<24)then if not(QL<26)then do if QL~=27 then local hq=kL[7];local Zq=(hq+1);local oq=hq+2;(xn)[hq]=ti(N(xn[hq]),Nl);do(xn)[Zq]=ti(N(xn[Zq]),Gl);end;xn[oq]=ti(N(xn[oq]),Tl);do(xn)[hq]=xn[hq]-xn[oq];end;dn=kL[2];else xn[kL[7]]=kL[6]==xn[kL[8]];end;end;else if QL~=25 then xn[kL[7]]=kL[6]-kL[1];else(xn)[kL[7]]=xn[kL[9]]~=kL[1];end;end;else if not(QL<22)then do if QL~=23 then xn[kL[7]]=xn[kL[9]]*xn[kL[8]];else do if kL[8]==21 then dn=dn-1;(tY)[dn]={[7]=(kL[7]-73)%256,[9]=(kL[9]-73)%256,[4]=3};else do for BW=kL[7],kL[9]do(xn)[BW]=Ri;end;end;end;end;end;end;else(xn)[kL[7]]=kL[6]>kL[1];end;end;end;end;else if QL>=7 then if not(QL<10)then do if not(QL>=12)then do if QL==11 then do if kL[9]~=145 then if not(not xn[kL[7]])then else dn=dn+1;end;else do dn=dn-1;end;tY[dn]={[7]=(kL[7]-170)%256,[9]=(kL[8]-170)%256,[4]=Kl};end;end;else local o2=(kL[7]);rn=o2+kL[9]-1;xn[o2]=xn[o2](b(xn,o2+1,rn));rn=o2;end;end;else do if QL==13 then do xn[kL[7]]=Si;end;do dn=dn+1;end;else xn[kL[7]]=kL[6]*xn[kL[8]];end;end;end;end;else do if not(QL<8)then if QL~=9 then xn[kL[7]]=kL[6]>=xn[kL[8]];else do(xn)[kL[7]]=X(kL[6],kL[1]);end;end;else if not(not(kL[6]<=xn[kL[8]]))then else dn=dn+1;end;end;end;end;else do if QL>=3 then if not(QL<5)then if QL==6 then Ki[kL[9]]=xn[kL[7]];else(xn)[kL[7]]=kL[5];end;else if QL~=4 then do if kL[8]~=225 then xn[kL[7]]=-xn[kL[9]];else dn=dn-1;(tY)[dn]={[4]=52,[7]=(kL[7]-Zl)%256,[8]=(kL[9]-139)%256};end;end;else if kL[8]~=176 then repeat local OY,bY=HY,(xn);if not(#OY>0)then else local He=({});for EO,TO in g,OY do for Ss,fs in g,TO do if not(fs[1]==bY and fs[2]>=0)then else local r1=fs[2];if not(not He[r1])then else He[r1]={bY[r1]};end;do(fs)[1]=He[r1];end;(fs)[2]=1;end;end;end;end;until Si;local lL=kL[7];return si,lL,lL;else dn=dn-1;do tY[dn]={[7]=(kL[7]-97)%256,[9]=(kL[9]-97)%256,[4]=111};end;end;end;end;else if QL<1 then xn[kL[7]]=xn[kL[9]][kL[1]];else if QL==2 then do if xn[kL[9]]~=xn[kL[8]]then else dn=dn+1;end;end;else(xn)[kL[7]]=xn[kL[9]]==xn[kL[8]];end;end;end;end;end;end;else if not(QL<42)then if not(QL<49)then if not(QL<53)then if not(QL<55)then if QL~=56 then if not(not(kL[6]<kL[1]))then else dn=dn+1;end;else repeat local qu,cu=HY,(xn);if not(#qu>0)then else local wY={};for Et,nt in g,qu do do for gd,Kd in g,nt do if Kd[1]==cu and Kd[2]>=0 then local Ef=Kd[2];if not wY[Ef]then wY[Ef]={cu[Ef]};end;(Kd)[1]=wY[Ef];(Kd)[2]=1;end;end;end;end;end;until Si;return Si,kL[7],0;end;else if QL==54 then(xn)[kL[7]]={b({},1,kL[9])};else if kL[8]==92 then dn=dn-1;tY[dn]={[7]=(kL[7]-130)%256,[9]=(kL[9]-Qi)%256,[4]=38};elseif kL[8]~=255 then xn[kL[7]]=xn[kL[9]];else dn=dn-1;(tY)[dn]={[8]=(kL[9]-209)%256,[7]=(kL[7]-209)%256,[4]=52};end;end;end;else if not(QL>=51)then if QL==50 then local X1,U1=kL[7],(xn[kL[9]]);xn[X1+1]=U1;(xn)[X1]=U1[kL[1]];else(xn)[kL[7]]=xn[kL[9]]>xn[kL[8]];end;else do if QL~=52 then local UY=(xn[kL[9]]);local xY=(kL[7]);local GY=(xn[kL[8]]);xn[xY+1]=UY;(xn)[xY]=UY[GY];else if kL[9]~=19 then if not(xn[kL[7]])then else dn=dn+1;end;else dn=dn-1;(tY)[dn]={[8]=(kL[8]-187)%256,[7]=(kL[7]-187)%256,[4]=11};end;end;end;end;end;else if not(QL>=45)then if not(QL<43)then if QL==44 then do xn[kL[7]][kL[6]]=xn[kL[8]];end;else(xn)[kL[7]]=H(kL[6],xn[kL[8]]);end;else do xn[kL[7]]=Zn[kL[5]];end;end;else if not(QL>=47)then if QL~=46 then local ws=(kL[7]);(xn)[ws]=xn[ws](xn[ws+1]);rn=ws;else xn[kL[7]]=xn[kL[9]]~=xn[kL[8]];end;else do if QL~=48 then local dO=(kL[7]);xn[dO]=xn[dO](xn[dO+1],xn[dO+2]);do rn=dO;end;else(xn)[kL[7]]=xn[kL[9]]<xn[kL[8]];end;end;end;end;end;else if not(QL>=35)then if not(QL<31)then do if not(QL<33)then if QL~=34 then(xn)[kL[7]]=xn[kL[9]]^xn[kL[8]];else local qq=kL[7];(xn)[qq]=xn[qq](b(xn,qq+1,rn));do rn=qq;end;end;else if QL==32 then local YP=xn[kL[9]]/kL[1];xn[kL[7]]=YP-YP%1;else do if xn[kL[9]]~=kL[1]then else dn=dn+1;end;end;end;end;end;else if not(QL>=29)then local Tf=kL[7];local of=(xn[Tf+2]);local Vf=xn[Tf]+of;(xn)[Tf]=Vf;if of>0 then if Vf<=xn[Tf+1]then dn=kL[2];xn[Tf+3]=Vf;end;else do if not(Vf>=xn[Tf+1])then else dn=kL[2];(xn)[Tf+3]=Vf;end;end;end;else if QL==30 then do(xn[kL[7]])[xn[kL[9]]]=kL[1];end;else repeat local K3,a3=HY,(xn);if not(#K3>0)then else local Ta=({});do for pO,zO in g,K3 do for vh,Mh in g,zO do do if not(Mh[1]==a3 and Mh[2]>=0)then else local tK=Mh[2];if not(not Ta[tK])then else Ta[tK]={a3[tK]};end;Mh[1]=Ta[tK];(Mh)[2]=1;end;end;end;end;end;end;until Si;return Si,kL[7],1;end;end;end;else if not(QL>=38)then do if not(QL<36)then if QL~=37 then(xn)[kL[7]]=H(kL[6],kL[1]);else(xn[kL[7]])[kL[6]]=kL[1];end;else rn=kL[7];xn[rn]();rn=rn-1;end;end;else do if not(QL<40)then if QL~=41 then(xn)[kL[7]]=xn[kL[9]]/kL[1];else local SK,KK=kL[7],kL[9];rn=SK+KK-1;repeat local xw,Zw=HY,(xn);if not(#xw>0)then else local kB=({});for qu,vu in g,xw do for G3,S3 in g,vu do if not(S3[1]==Zw and S3[2]>=0)then else local cG=S3[2];if not(not kB[cG])then else(kB)[cG]={Zw[cG]};end;(S3)[1]=kB[cG];(S3)[2]=1;end;end;end;end;until Si;return Si,SK,KK;end;else if QL==39 then do if kL[8]==Yi then dn=dn-1;tY[dn]={[4]=57,[7]=(kL[7]-205)%256,[9]=(kL[9]-205)%ci};elseif kL[8]~=182 then repeat local iq,Yq,hq=HY,xn,(kL[7]);if not(#iq>0)then else local ST=({});for QA,kA in g,iq do do for SL,hL in g,kA do if hL[1]==Yq and hL[2]>=hq then local ro=hL[2];if not(not ST[ro])then else(ST)[ro]={Yq[ro]};end;do hL[1]=ST[ro];end;do hL[2]=1;end;end;end;end;end;end;until Si;else do dn=dn-1;end;tY[dn]={[9]=(kL[9]-253)%256,[4]=86,[7]=(kL[7]-253)%256};end;end;else if kL[8]==56 then do dn=dn-1;end;(tY)[dn]={[9]=(kL[9]-162)%256,[7]=(kL[7]-162)%256,[4]=81};elseif kL[8]==43 then dn=dn-1;tY[dn]={[7]=(kL[7]-243)%256,[4]=102,[9]=(kL[9]-243)%ci};elseif kL[8]==57 then dn=dn-1;tY[dn]={[7]=(kL[7]-47)%256,[4]=81,[9]=(kL[9]-47)%ci};elseif kL[8]~=142 then repeat local XM,UM=HY,xn;do if not(#XM>0)then else local Dm={};do for XK,KK in g,XM do do for WZ,wZ in g,KK do if not(wZ[1]==UM and wZ[2]>=0)then else local xO=(wZ[2]);do if not Dm[xO]then Dm[xO]={UM[xO]};end;end;wZ[1]=Dm[xO];do wZ[2]=1;end;end;end;end;end;end;end;end;until Si;local jT=(kL[7]);return si,jT,jT+kL[9]-2;else dn=dn-1;(tY)[dn]={[9]=(kL[9]-99)%256,[7]=(kL[7]-99)%256,[4]=57};end;end;end;end;end;end;end;end;end;end;end;end;end);if not(qn)then if T(yn)==zl then if not(e(yn,nl))then else return Ol();end;if not(e(yn,rl))then n(yn,0);else n("Luraph Script:"..(pY[dn-1]or"(internal)")..": "..z(yn),0);end;else(n)(yn,0);end;else if yn then if an==1 then do return xn[zn]();end;else return xn[zn](b(xn,zn+1,rn));end;elseif not(zn)then else return b(xn,zn,an);end;end;end;if not(x)then else(x)(lY,FY);end;return lY;end;Ti=5;end;end;end;end;Ti=0;repeat do if Ti~=0 then return Zi(Gi,l,Ri)(...);else Y=Ri;Ti=1;end;end;until(si);end)("\115\116\114\105\110\103","\99\104\97\114",pcall,"\96\102\111\114\96\32\105\110\105\116\105\97\108\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",false,130,string.match,"\95\95\109\111\100\101",bit32,select,coroutine.yielderror,table.insert,"\110","\46\46",assert,table,"\117\110\112\97\99\107",bit,"\98\121\116\101",103,nil,"\98\110\111\116","\96\102\111\114\96\32\108\105\109\105\116\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",tonumber,"\114\115\104\105\102\116",string,"\96\102\111\114\96\32\115\116\101\112\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",139,"",231,rawget,"\94\46\45\58\37\100\43\58\32",true,next,"\118",string.rep,_ENV,rawset,unpack,"\115\117\98",setmetatable,"\35","\103\115\117\98",111,type,256,getfenv,"\97\116\116\101\109\112\116\32\116\111\32\121\105\101\108\100\32\97\99\114\111\115\115\32\109\101\116\97\109\101\116\104\111\100\47\67\37\45\99\97\108\108\32\98\111\117\110\100\97\114\121",tostring,"\98\120\111\114","\108\115\104\105\102\116",setfenv,...);
